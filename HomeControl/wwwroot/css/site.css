:root {
    --mainMenuWidh: 200px;
}

.bound {
}

.overlay {
    border-radius: 0;
    padding: 0;
    position: absolute;
    top: var(--scrollY);
    left: 0;
    width: 100%;
    height: 100vh;
}

.switch-container {
    display: flex;
    gap: var(--mediumGap);
}

    .switch-container label.switch-input-label {
        display: inline-block;
        width: 4em;
        height: calc(1em + 10px);
        border-radius: 18px;
        border: 1px solid var(--borders);
        padding: 4px;
        transition: 0.3s;
        align-self: center;
    }

    .switch-container label.switch-checked-label {
        display: none;
        align-self: center;
    }

    .switch-container label.switch-unchecked-label {
        align-self: center;
    }

    .switch-container span.switch-thumb {
        display: block;
        justify-self: left;
        width: 1em;
        height: 1em;
        background: var(--foreground);
        border-radius: 50%;
    }

    .switch-container:has(input[type=checkbox]:checked) label.switch-input-label {
        background: var(--highlights);
    }

    .switch-container:has(input[type=checkbox]:checked) label.switch-checked-label {
        display: initial;
    }

    .switch-container:has(input[type=checkbox]:checked) label.switch-unchecked-label {
        display: none;
    }

    .switch-container input[type=checkbox]:checked + .switch-thumb {
        justify-self: right;
        background: var(--hightlightedForeground);
    }

.toggle-button-container {
}

    .toggle-button-container div.toggle-button {
        background: var(--controls);
        border: none;
        color: var(--foreground);
        border-radius: var(--smallBorderRadius);
        padding: var(--smallGap) var(--mediumGap) var(--smallGap) var(--mediumGap);
        width: 100%;
        font-size: inherit;
        line-height: 1em;
        box-shadow: var(--shadow2);
    }

        .toggle-button-container div.toggle-button:active {
            background: var(--highlights);
            color: var(--highlightedForeground);
        }

    .toggle-button-container input[type=checkbox]:checked + div.toggle-button {
        background: var(--highlights);
        color: var(--highlightedForeground);
    }

.background40 {
    background: var(--background40);
}

.shadow-2 {
    box-shadow: var(--shadow2);
}

.shadow-4 {
    box-shadow: var(--shadow4);
}

.body-content {
    max-width: 1000px;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 120px;
}

.card {
    background: var(--elevatedBackground);
    border-radius: var(--smallBorderRadius);
    min-height: 64px;
    text-overflow: ellipsis;
    white-space: nowrap;
    box-shadow: var(--shadow2);
}

card-element {
    min-height: 64px;
    display: grid;
    grid-template-columns: 1fr auto;
    line-height: 1;
}

.card-padding {
    padding: var(--mediumGap);
}

    .card-padding card-element {
        min-height: calc(64px - (var(--mediumGap) * 2));
    }

.card-children-separator {
}


    .card-children-separator > * {
        border-top: 1px solid var(--background);
    }

    .card-children-separator > :first-child {
        border-top: unset;
    }

.info-text {
    font-size: 12px;
}

    .info-text:empty {
        display: none;
    }

.error-text {
    color: darkred;
    font-size: 12px;
}

    .error-text:empty {
        display: none;
    }

.padded {
    padding: var(--smallGap) var(--mediumGap) var(--smallGap) var(--mediumGap);
}

.padded-medium {
    padding: var(--mediumGap);
}

.centered-content {
    align-content: center;
}

.field-label {
    color: var(--foreground60);
}

.card-a-container {
    font-size: inherit;
}

.bordered {
    border-color: var(--borders);
}

.lesser {
    color: var(--foreground80);
}

.grid-layer-item {
    grid-row: 1;
    grid-column: 1;
}

.menu-item {
    font-size: inherit;
    border-radius: var(--smallBorderRadius);
}

.highlighted-menu-item {
    background: var(--elevatedBackground);
    border-left: 2px solid var(--highlights);
}

.menu-item-a {
    color: var(--foreground);
    text-decoration: none;
}

    .menu-item-a:link {
        color: var(--foreground);
    }

    .menu-item-a:visited {
        color: var(--foreground);
    }

    .menu-item-a:active {
        background: none;
    }

.grid {
    display: grid;
    gap: var(--smallGap);
}

.grid-1fr-auto {
    display: grid;
    gap: var(--smallGap);
    grid-template-columns: 1fr auto;
}

.grid-auto-1fr-auto {
    display: grid;
    gap: var(--smallGap);
    grid-template-columns: auto 1fr auto;
}

.grid-2 {
    display: grid;
    gap: var(--smallGap);
    grid-template-columns: 1fr 1fr;
}

.grid-1-2 {
    display: grid;
    gap: var(--smallGap);
    grid-template-columns: 1fr;
}

.flex {
    display: flex;
    gap: var(--smallGap);
}

.flex-vertical {
    display: flex;
    gap: var(--smallGap);
    flex-direction: column;
}

.flex > button {
    width: auto;
}

.medium-gap {
    gap: var(--mediumGap);
}

.large-gap {
    gap: var(--largeGap);
}

.fade-in {
    animation: fadein 0.3s;
}

.medium-to-large-display {
    display: none;
}

.small-display {
}

.hidden {
    display: none;
}

#dialog-overlay {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
}

#body-container {
    grid-column: 1;
    grid-row: 1;
    padding: var(--mediumGap);
    min-height: calc(100vh - var(--headerHeight));
}

#small-display-commands-section {
    position: sticky;
    margin: auto 16px 16px auto;
    padding: var(--mediumGap);
    bottom: 0;
}

#small-display-commands-toggle-button {
    min-width: initial;
    width: 96px;
    height: 96px;
    border-radius: 50%;
    align-self: self-end;
}

#small-display-commands-overlay-button {
}

@media (min-width: 768px) {
    .medium-to-large-display {
        display: block;
    }

    .small-display {
        display: none;
    }

    .grid-1-2 {
        grid-template-columns: 1fr 1fr;
    }

    #small-display-commands-section {
        display: none;
    }
}

@keyframes fadein {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}
