@page
@using HomeControl.Integrations
@using HomeControl.Views.Shared
@model HomeControl.Pages.Devices.IndexModel
@{
	Layout = "MenuPage_Layout";
	ViewData["Title"] = "Devices";
}

<div class="grid body-content">
	<card-a class="card card-padding" asp-page="ManageIntegrations">
		<card-element header="Manage Integrations"></card-element>
	</card-a>
	<card-a class="card card-padding" asp-page="Routines">
		<card-element header="Routines"></card-element>
	</card-a>

	<h2 class="lesser">TP-Link Devices</h2>

	@for (int i = 0; i < Model.ViewModel.Devices.Count; i++)
	{
		var deviceInfo = Model.ViewModel.Devices[i];

		@switch (deviceInfo.IntegrationDevice.InitilizationState)
		{
			case DeviceInitilizationState.Success:
				<details class="card card-children-separator">
					<summary class="card-padding">
						<card-element class="bound" data-binding-header="devices[@(i)].integrationDevice.displayName" data-binding-info-text="devices[@(i)].integrationDevice.additionalInfo">
							@if (deviceInfo.PrimaryOption != null)
							{
								<button class="bound" type="button" data-binding-inner="devices[@(i)].primaryOption" data-clickbinding-id="devices[@(i)].Device.id" data-clickbinding-featureName="devices[@(i)].primaryOption" onclick="executePageHandler('ExecuteFeature', this.dataset)"></button>
							}
						</card-element>
					</summary>
					@{
						var options = deviceInfo.Options.ToArray();

						for (int j = 0; j < options.Length; j++)
						{
							<card-element class="card-padding bound" data-binding-header="devices[@(i)].options[@(j)].name">
								<button type="button" data-clickbinding-optionId="devices[@(i)].options[@(j)].id" onclick="executePageHandler('ExecuteOption', this.dataset)">Execute</button>
							</card-element>
						}
					}
					<card-element class="card-padding" header="Edit">
						<a class="button-a" asp-page="EditDevice" asp-route-DeviceId="@deviceInfo.Device.Id">Edit</a>
					</card-element>
					<div class="grid-1-2 card-padding">
						@await Html.PartialAsync("DeviceInformation", new DeviceInformationModel(deviceInfo.IntegrationDevice))
					</div>
				</details>
				break;
			case DeviceInitilizationState.Error:
				<card-element class="card card-padding bound" data-binding-header="devices[@(i)].integrationDevice.displayName" data-binding-error-text="devices[@(i)].integrationDevice.initializationError"></card-element>
				break;
			default: throw new NotImplementedException();
		}
	}
</div>