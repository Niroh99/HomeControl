@page "{DeviceId}"
@model HomeControl.Pages.Devices.DeviceOptionsModel
@{
	Layout = "MenuPage_Layout";
	ViewData["Title"] = "Device Options";

	void RenderCommands()
	{
		<button onclick="showDialogById('CreateDeviceOptionDialog')">Create Option</button>
	}
}

@section Commands {
	<div class="flex-vertical">
		@{
			RenderCommands();
		}
	</div>
}

@section Dialogs {
	<dialog id="CreateDeviceOptionDialog">
		<form method="post" class="grid card-padding" asp-page-handler="CreateDeviceOption">
			<div class="grid">
				<label for="DeviceOptionName">Name</label>
				<input id="DeviceOptionName" name="DeviceOptionName" />
			</div>
			<div class="flex" style="justify-content: right">
				<button class="shadow-2">Create Option</button>
				<button class="shadow-2" type="button" onclick="closeDialogById('CreateDeviceOptionDialog')">Cancel</button>
			</div>
		</form>
	</dialog>
}

<div class="grid body-content">
	@if (Model.ViewModel.Device == null)
	{
		<h2 class="lesser">Unknown Device</h2>
	}
	else
	{
		<h2 class="lesser bound" data-binding-inner="integrationDevice.displayName"></h2>

		<div class="flex medium-to-large-display">
			@{
				RenderCommands();
			}
		</div>

		if (Model.ViewModel.DeviceOptions.Count == 0)
		{
			<h3 class="lesser">No Options</h3>
		}
		else
		{
			@for (int i = 0; i < Model.ViewModel.DeviceOptions.Count; i++)
			{
				var deviceOption = Model.ViewModel.DeviceOptions[i];

				<card-a class="card card-padding" asp-page="EditDeviceOption" asp-route-DeviceOptionId="@deviceOption.Id">
					<card-element class="bound" data-binding-header="deviceOptions[@(i)].name"></card-element>
				</card-a>
			}
		}
	}
</div>